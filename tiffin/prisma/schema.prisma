// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MasterPrefecture {
  id                    Int                     @id @default(autoincrement())
  name                  String
  masterAreas           MasterArea[]
  masterRailroadStation MasterRailroadStation[]
  User                  User[]

  @@fulltext([name])
}

model MasterArea {
  id                 Int                  @id @default(autoincrement())
  name               String
  masterPrefecture   MasterPrefecture     @relation(fields: [masterPrefectureId], references: [id])
  masterPrefectureId Int
  MasterDetailedArea MasterDetailedArea[]
  Shop               Shop[]

  @@fulltext([name])
}

model MasterDetailedArea {
  id           Int        @id @default(autoincrement())
  name         String
  masterArea   MasterArea @relation(fields: [masterAreaId], references: [id])
  masterAreaId Int

  @@fulltext([name])
}

model MasterRailroadStation {
  id                 Int              @id @default(autoincrement())
  name               String
  post_code          String?
  address            String?
  status             Int?
  masterPrefecture   MasterPrefecture @relation(fields: [masterPrefectureId], references: [id])
  masterPrefectureId Int
  Shop               Shop[]

  @@fulltext([name])
}

model MasterGenre {
  id                       Int                        @id @default(autoincrement())
  name                     String
  MasterGenreMasterCooking MasterGenreMasterCooking[]

  @@fulltext([name])
}

model MasterCooking {
  id                       Int                        @id @default(autoincrement())
  name                     String
  MasterGenreMasterCooking MasterGenreMasterCooking[]
  Menu                     Menu[]

  @@fulltext([name])
}

model MasterGenreMasterCooking {
  masterGenre     MasterGenre   @relation(fields: [masterGenreId], references: [id])
  masterGenreId   Int
  masterCooking   MasterCooking @relation(fields: [masterCookingId], references: [id])
  masterCookingId Int

  @@id([masterGenreId, masterCookingId])
}

model ShopUser {
  id        Int      @id @default(autoincrement())
  name      String   @unique @default("")
  email     String   @default("")
  password  String   @default("")
  createdAt DateTime @default(now())
  updateAt  DateTime @default(now()) @updatedAt
  Shop      Shop[]
}

model Shop {
  id                      Int                   @id @default(autoincrement())
  name                    String                @default("")
  address                 String                @default("")
  tel                     String                @default("")
  openingTime             String                @default("")
  closingTime             String                @default("")
  createdAt               DateTime              @default(now())
  updateAt                DateTime              @default(now()) @updatedAt
  masterArea              MasterArea            @relation(fields: [masterAreaId], references: [id])
  masterAreaId            Int
  masterDetailedAreaId    Int
  masterRailroadStation   MasterRailroadStation @relation(fields: [masterRailroadStationId], references: [id])
  masterRailroadStationId Int
  shopUser                ShopUser              @relation(fields: [shopUserId], references: [id])
  shopUserId              Int
  Menu                    Menu[]
}

model Menu {
  id              Int           @id @default(autoincrement())
  name            String        @default("")
  price           Int           @default(0)
  createdAt       DateTime      @default(now())
  updateAt        DateTime      @default(now()) @updatedAt
  masterCooking   MasterCooking @relation(fields: [masterCookingId], references: [id])
  masterCookingId Int
  shop            Shop          @relation(fields: [shopId], references: [id])
  shopId          Int
  ShopPhoto       ShopPhoto[]
}

model ShopPhoto {
  id            Int             @id @default(autoincrement())
  path          String          @default("")
  createdAt     DateTime        @default(now())
  updateAt      DateTime        @default(now()) @updatedAt
  menu          Menu            @relation(fields: [menuId], references: [id])
  menuId        Int
  ShopPhotoLike ShopPhotoLike[]
}

model User {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @default("")
  email              String           @default("")
  password           String           @default("")
  masterPrefecture   MasterPrefecture @relation(fields: [masterPrefectureId], references: [id])
  masterPrefectureId Int
  createdAt          DateTime         @default(now())
  updateAt           DateTime         @default(now()) @updatedAt
  ShopPhotoLike      ShopPhotoLike[]
}

model ShopPhotoLike {
  shopPhoto   ShopPhoto @relation(fields: [shopPhotoId], references: [id])
  shopPhotoId Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  @@id([shopPhotoId, userId])
}
